/**
* This class is to test primitive data structures
* Author: Cyrus Barker, date 2016-02-08
*/
 
public class PrimitiveDataExamples
{
      /**
      * Use this to test simple addition of ints and print the result
      */
      public void testAdditionInt()
      {
          int testInt = 2+3/4;
          System.out.println("here it is " + testInt);
      }
 
      /**
      * Use this to test simple addition of ints and a double and print the result
      */
      public void testAdditionDouble()
      {
          double testDouble = 2+3.0/4;
          System.out.println("Your double is " + testDouble);
      }
 
      /**
      * Use this to test order of operations
      */
      public void testOrderOfOpp()
      {
          double testOrder = 10-(5+3.0)/4*2;
          System.out.println("The answer to your testOrder is " + testOrder);
      }
 
      /**
      * Use this to test if a number is evenly divisible by 5
      * @param x    the number to test if it is divisible
      * @return     true if it is divisible by 5, false otherwise
      */
      public boolean divisibleByFive(int x)
      {
          if (x % 5 == 0) {
        	  return true;
          }
          else {
        	  return false;
          }
      }
 
     
 
      /**
      * Prints out numbers from 1-100 with 10 numbers on each line
      */
      public void printRows()
      {
          for (int i=1; i<=100; i++) {
        	  if (i == 100) {
        		  System.out.print(i);
        	  }
        	  else {
        		  System.out.print(i + ", ");
        	  }
        	  if (i % 10 == 0) {
        		  System.out.print("\n");
        	  }
          }
        	  
 
      }
 
      /**
      * Prints out numbers from begin-end with numEachRow numbers on each line
      * @param begin        the number to begin at
      * @param end          the number to end at
      * @param numEachRow   the number of numbers on each row.
      */
      public void printRows(int begin, int end, int numEachRow)
      {
          for (int i=begin; i<=end; i++) {
        	  if (i == end) {
        		  System.out.print(i);
        	  }
        	  else {
        		  System.out.print(i + ", ");
        	  }
        	  if (i%numEachRow == 0) {
        		  System.out.print("\n");
        	  }
          }
 
      }
 
      /**
      * Prints out the least number of coins that it would take to make cents
      * @param cents   the number of cents
      */
      public void leastNumOfCoins(int cents)
      {
          int quarters = 0;
          int dimes = 0;
          int nickels = 0;
          int pennies = 0;
          while (cents >= 25) {
        	  quarters++;
        	  cents -= 25;
          }
          while (cents >= 10) {
        	  dimes++;
        	  cents -= 10;
          }
          while (cents >= 5) {
        	  nickels++;
        	  cents -= 5;
          }
          while (cents >= 1) {
        	  pennies++;
        	  cents -= 1;
          }
          System.out.println("The least number of coins possible is " + quarters + " quarters, " + dimes + " dimes, " + nickels + " nickels, and " + pennies + " pennies.");
      }
 
      /**
      * given a 3 digit number, it will return true if every number in it goes evenly in the number, or false other wise. 
      * For example 122 is a self divisor (1 and 2 both evenly go in). Or 128 is a selfDivisor.                   If it has a 0 in it (ie 505), it is NOT a selfDivisor.
      * @param x   the number
      */
      public void isSelfDivisor(int x)
      {
          //your code here (currently it returns true)
 
      }
       
      /**
      * given any digit number, it will return true if every number in it goes evenly in the number, or false other wise. 
      * For example 122 is a self divisor (1 and 2 both evenly go in). Or 128 is a selfDivisor.                   If it has a 0 in it (ie 505), it is NOT a selfDivisor.
      * @param x   the number (which has any number of digits)
      */
      public void APisSelfDivisor(int x)
      {
          //your code here (currently it returns true)
 
      }      
       
      //main method for Eclipse
      public static void main(String[] args) 
      {
            PrimitiveDataExamples p=new PrimitiveDataExamples();
            p.testAdditionInt(); 
            p.testAdditionDouble();
            p.testOrderOfOpp();
            p.divisibleByFive(49);
            p.printRows();
            p.printRows(1,20,4);
            p.leastNumOfCoins(73);
         
      }
 
 
}
